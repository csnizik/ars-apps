<?php

/**
 * @file
 * Functions to support theming in the ARSApps Theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * @var array $variables
 *   Template variables.
 */
function arsapps_theme_preprocess_html(array &$variables): void {
  // Add custom body classes.
  /** @var array<string, mixed> $variables */
  $current_path = \Drupal::service('path.current')->getPath();
  $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $path_alias = ltrim($path_alias, '/');

  if (!empty($path_alias)) {
    $variables['attributes']['class'][] = 'path--' . Html::cleanCssIdentifier($path_alias);
  }
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function arsapps_theme_preprocess_page(array &$variables): void {
  // Add page-specific variables here.
  /** @var array<string, mixed> $variables */
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
  $variables['site_slogan'] = \Drupal::config('system.site')->get('slogan');
}

/**
 * Implements hook_preprocess_HOOK() for node templates.
 *
 * Adds node-specific preprocessing variables.
 */
function arsapps_theme_preprocess_node(array &$variables): void {
  // Add node-specific preprocessing here.
  /** @var array<string, mixed> $variables */
  $node = $variables['node'];
  $variables['created_formatted'] = \Drupal::service('date.formatter')->format($node->getCreatedTime(), 'medium');
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function arsapps_theme_theme_suggestions_page_alter(array &$suggestions, array $variables): void {
  // $suggestions: The array of theme suggestions to alter.
  // $variables: The array of variables for the template.
  // Add custom page template suggestions.
  /** @var array<string> $suggestions */
  /** @var array<string, mixed> $variables */
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__' . $content_type;
  }
}

/**
 * Implements hook_form_alter().
 *
 * Alters forms in the ARSApps theme.
 */
function arsapps_theme_form_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
  // Add custom form alterations here.
  /** @var array<string, mixed> $form */
  switch ($form_id) {
    case 'search_block_form':
      $form['keys']['#attributes']['placeholder'] = t('Search...');
      break;
  }
}

/**
 * Implements hook_page_attachments().
 */
function arsapps_theme_page_attachments_alter(array &$attachments): void {
  // Only attach hot reload during local development via Vite.
  if (str_contains(\Drupal::request()->getHost(), 'ddev.site')) {
    $target = 'arsapps_theme/theme';
    $key = array_search($target, $attachments['#attached']['library'], TRUE);
    if ($key !== FALSE) {
      unset($attachments['#attached']['library'][$key]);
    }
  }
  \Drupal::logger('arsapps_theme')->notice('After unset: <pre>@data</pre>', ['@data' => print_r($attachments['#attached']['library'], TRUE)]);
}
